user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    multi_accept on;
    worker_connections 65535;
}

http {
    # use UTF-8 always
    charset utf-8;

    # don't emit nginx version on error pages and Server header
    server_tokens off;

    # don't log 404s
    log_not_found off;

    # default is 1M?
    client_max_body_size 16M;

    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # MIME
    include mime.types;
    default_type application/octet-stream;

    # logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # SSL wildcard cert
    # certbot, cloudflare DNS plugin for LetsEncrypt wildcard cert
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    ssl_trusted_certificate /ssl/chain.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites
    # curl https://ssl-config.mozilla.org/ffdhe4096.txt > /configs/dhparam.pem
    ssl_dhparam /configs/dhparam.pem;

    # Mozilla Intermediate configuration for protocols/ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # use Docker DNS for resolution, to avoid 502 errors on Docker container recreate
    resolver 127.0.0.11;

    # HTTPS redirect
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # default response (no matching server)
    server {
        listen 443 default_server;
        listen [::]:443 default_server;
        server_name _;
        return 404;
    }

    # load configs for individual sites
    include /etc/nginx/sites-enabled/*;
}
